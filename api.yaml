openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/SABUDILOVSKIY_1/CourseWork/1.0.0
info:
  description: This is a simple API
  version: "1.0.0"
  title: Simple Inventory API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
  - name: teachers
    description: Данные операции доступны для преподавателей, которые ведут соответствующую группу и соответствующий предмет
  - name: users
    description: Доступно всем
paths:
  /register:
    post:
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/UserCreditialsV1'
      responses:
        '200':
          description: Создан новый пользователь
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/AuthTokenV1'
        '400':
          description: Логин уже занят или пароль не удолетворяет требованиям
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/ErrorV1'
  /login:
    post:
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/UserCreditialsV1'
      responses:
        '200':
          description: Авторизация прозошла успешно
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/AuthTokenV1'
        '404':
          description: Имя пользователя или пароль не верны
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/ErrorV1'
  /get-timetable:
    post:
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonFilterV1'
      responses:
        '200':
          description: Найденные пары
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LessonV1'
  /lesson/add:
    post:
      tags:
        - teachers
        - admins
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonAddRequestV1'
      parameters:
        - in: cookie
          name: authToken
          required: true
          schema:
            $ref: '#/components/schemas/AuthTokenV1'
      responses:
        '200':
          description: Пара успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonV1'
        '401':
          description: Отсутствует или истекший токен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorV1'
        '403':
          description: Нет прав на подобные изменения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorV1'     
                
  /lesson/move:
    post:
      tags:
        - teachers
        - admins
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonMoveRequestV1'
      parameters:
        - in: cookie
          name: authToken
          required: true
          schema:
            $ref: '#/components/schemas/AuthTokenV1'
      responses:
        '200':
          description: Пара успешно перемещена
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LessonV1'
        '401':
          description: Отсутствует или истекший токен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorV1'
        '403':
          description: Нет прав на подобные изменения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorV1'   
  /lesson/remove:
    post:
      tags:
        - admins
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonMoveRequestV1'
      parameters:
        - in: cookie
          name: authToken
          required: true
          schema:
            $ref: '#/components/schemas/AuthTokenV1'
      responses:
        '200':
          description: Пара успешно отменена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonV1'
        '401':
          description: Отсутствует или истекший токен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorV1'
        '403':
          description: Нет прав на подобные изменения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorV1'
  /admin/group/add:
    post:
      tags:
        - admins
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupAddRequestV1'
      parameters:
        - in: cookie
          name: authToken
          required: true
          schema:
            $ref: '#/components/schemas/AuthTokenV1'
      responses:
        '200':
          description: Группа успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupV1'
        '401':
          description: Отсутствует или истекший токен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorV1'
        '403':
          description: Нет прав на подобные изменения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorV1'  
  /admin/group/remove:
    post:
      tags:
        - admins
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRemoveRequestV1'
      parameters:
        - in: cookie
          name: authToken
          required: true
          schema:
            $ref: '#/components/schemas/AuthTokenV1'
      responses:
        '200':
          description: Группа успешно удалена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupV1'
        '401':
          description: Отсутствует или истекший токен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorV1'
        '403':
          description: Нет прав на подобные изменения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorV1'
  # /admin/group/remove:
  # /admin/group/lesson/add:
  # /admin/group/lesson/remove:

components:
  schemas:
    UserCreditialsV1:
      properties:
        login:
          type: string
          example: 'some_nickname'
        password:
          type: string
          example: 'some_password'
      required: 
        - login
        - password  
    TypeOfWeek:
      description: 'Тип недели: 0 - всегда, 1 - только по числителю, 2 - только по знаменателю'
      type: integer
      enum:
        - 0
        - 1
        - 2
    Subgroup:
      description: 'Тип подгруппы: 0 - для обеих, 1 - только для левой, 2 - только для правой'
      type: integer
      enum:
        - 0
        - 1
        - 2
    LessonV1:
      properties:
        room_id:
          $ref: '#/components/schemas/Id'
        room_name:
          type: string
          example: '405П'
          description: Номер аудитории
        teacher_id:
          type: string
          example: 'some_id'
        teacher_fio:
          type: string
          example: 'Иванов Иван Иванович'
        subject_name:
          type: string
          example: 'Дифференциальные уравнения'
        group:
          $ref: '#/components/schemas/GroupV1'
        group_id:
          $ref: '#/components/schemas/Id'
        week:
          $ref: '#/components/schemas/TypeOfWeek'
        subgroup:
          $ref: '#/components/schemas/Subgroup'
        start:
          $ref: '#/components/schemas/Timestamp'
        end:
          $ref: '#/components/schemas/Timestamp'
    TeacherV1:
      properties:
        fio:
          type: string
          example: 'Иванов Иван Иванович'
        faculty_name:
          type: string
          example: 'ПММ'
        department_name:
          type: string
          example: 'МОЭВМ'
        faculty_id:
          $ref: '#/components/schemas/Id'
        department_id:
          $ref: '#/components/schemas/Id'
        bio:
          type: string
          example: 'Работаю 100500 лет, люблю ВГУ'
    FacultyV1:
      properties:
        name:
          type: string
          example: 'ПММ'
        dean_name:
          type: string
          example: 'Медведев'
        dean_id:
          type: string
          example: '132131'
    AuthTokenV1:
      description: 'Используется для аунтефикации пользователя. Передаем строго через куки'
      allOf:
        - $ref: '#/components/schemas/Id'
    Timestamp:
      type: string
      example: '2010-02-10-08.15.000Z'
    ErrorV1:
      properties:
        machine_id:
          type: string
          example: 'SMALL_PASSWORD'
        description:
          type: string
          example: 'Password must have at least 10 symbols'
    Day:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
    NumberLesson:
      type: integer
      enum: 
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
    LessonFilterV1:
      properties:
        teacher_id:
          type: string
        teacher_fio:
          type: string
        subject_name:
          type: string
        room_name:
          type: string
        days:
          type: array
          items:
            $ref: '#/components/schemas/Day'
        subgroup:
          $ref: '#/components/schemas/Subgroup'
        week:
          $ref: '#/components/schemas/TypeOfWeek'
        faculty_name:
          type: string
        faculty_id:
          type: string
        department_name:
          type: string
        department_id:
          type: string
        group_id:
          type: string
        group_name:
          type: string
        group_course:
          type: string
    LessonAddRequestV1:
      properties:
        subject_id:
          type: string
        number_lesson:
          $ref : '#/components/schemas/NumberLesson'
        room_id: 
          type: string
        start:
          $ref: '#/components/schemas/Timestamp'
        end:
          $ref: '#/components/schemas/Timestamp'
    LessonMoveRequestV1:
      properties:
        old_lesson_id: 
          $ref: '#/components/schemas/Id'
        subject_id:
          $ref: '#/components/schemas/Id'
        number_lesson:
            $ref : '#/components/schemas/NumberLesson'
        room_id: 
          $ref: '#/components/schemas/Id'
        start:
          $ref: '#/components/schemas/Timestamp'
        end:
          $ref: '#/components/schemas/Timestamp'
    LessonRemoveRequestV1:
      properties:
        lesson_id:
          $ref: '#/components/schemas/Id'
        start:
          $ref: '#/components/schemas/Timestamp'
        end:
          $ref: '#/components/schemas/Timestamp'
    EducationType:
      type: string
      enum:
        - 'undergraduate'
        - 'magistracy'
        - 'magistracy'
        - 'specialty'
    GroupAddRequestV1:
      properties:
        group_name:
          type: string
          example: '62'
        group_course:
          type: integer
          example: 3
        group_type:
          $ref: '#/components/schemas/EducationType'
    GroupRemoveRequestV1:
      properties:
        group_id:
          $ref: '#/components/schemas/Id'
    GroupV1:
      properties:
        name:
          type: string
        course:
          type: integer
        type:
          $ref: '#/components/schemas/EducationType'
    Id:
      description: 'UUID v4'
      type: string
      example: '6173575e-e86c-4c55-b43d-aa3ca6242181'
    
